,Hyper parameters
0,"batch_size,32"
1,"seed,27108422"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[ 0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[ 0.,  0.,  0., -0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]],

        [[-0.,  0.,  0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0.,  0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0.,  0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
        0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
        0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
        0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       [ 0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 4.3499481e-04, -3.2664833e-03, -1.4428154e-03, -2.8183484e-03,
        1.7171823e-03,  5.8376498e-04,  2.1724752e-03, -4.9158907e-03,
        2.0581344e-04, -1.9576726e-03,  9.0262416e-05,  5.3769308e-03,
       -2.5695036e-03, -1.5344346e-03, -5.8275419e-03,  1.5116715e-03,
        3.7211713e-03, -3.2695471e-03,  4.7256099e-03,  6.0342788e-03,
        3.7657223e-03, -1.1030530e-03, -3.6669830e-03, -3.2947445e-03,
        4.1089352e-04,  3.1280066e-04,  1.4565708e-03,  1.4058005e-03,
       -2.0624064e-03, -2.3522365e-03,  2.7959060e-03, -2.5154194e-03,
        2.1821391e-03, -4.8956013e-04,  2.7318462e-03, -2.5045234e-04,
        5.7661482e-03,  6.3448912e-05,  9.0797263e-04, -4.7708992e-03,
        1.7493579e-03, -1.4941085e-03, -5.2067504e-04], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[ 0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[ 0.,  0.,  0., -0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]],

        [[-0.,  0.,  0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0.,  0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
        0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
        0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
        0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       [ 0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 4.3499481e-04, -3.2664833e-03, -1.4428154e-03, -2.8183484e-03,
        1.7171823e-03,  5.8376498e-04,  2.1724752e-03, -4.9158907e-03,
        2.0581344e-04, -1.9576726e-03,  9.0262416e-05,  5.3769308e-03,
       -2.5695036e-03, -1.5344346e-03, -5.8275419e-03,  1.5116715e-03,
        3.7211713e-03, -3.2695471e-03,  4.7256099e-03,  6.0342788e-03,
        3.7657223e-03, -1.1030530e-03, -3.6669830e-03, -3.2947445e-03,
        4.1089352e-04,  3.1280066e-04,  1.4565708e-03,  1.4058005e-03,
       -2.0624064e-03, -2.3522365e-03,  2.7959060e-03, -2.5154194e-03,
        2.1821391e-03, -4.8956013e-04,  2.7318462e-03, -2.5045234e-04,
        5.7661482e-03,  6.3448912e-05,  9.0797263e-04, -4.7708992e-03,
        1.7493579e-03, -1.4941085e-03, -5.2067504e-04], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
