,Hyper parameters
0,"batch_size,8"
1,"seed,27108422"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]]],


       [[[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]]],


       [[[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
           0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.]],

        [[-0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0.,  0., -0.]]],


       [[[ 0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0.,  0.,  0.,  0.]]],


       [[[ 0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,
           0.,  0., -0.,  0.]],

        [[ 0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[ 0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
       -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,
        0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
        0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
       -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
       -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0.,
        0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ...,  0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
       -0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
        0.,  0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.7147063e-03, -7.1344746e-04, -8.4157940e-04, -3.4186951e-04,
       -6.4603821e-04, -8.6898590e-04, -2.9516855e-04,  9.7657030e-04,
       -1.9253780e-03,  9.7318448e-04,  9.6420175e-04, -1.3251969e-03,
        1.6553674e-03,  1.8340681e-03, -3.7930187e-04, -3.7164846e-05,
       -1.3671503e-04,  2.1934912e-03, -8.4312115e-04,  2.8084761e-03,
        9.4901409e-04, -1.6356679e-03,  8.7871123e-04, -6.3248695e-04,
       -9.0221711e-06, -3.0651031e-04, -8.0447143e-04, -1.8284787e-04,
        9.1000873e-04, -3.4759790e-04, -1.9395242e-03, -1.4583151e-03,
       -6.7984511e-04, -9.8126067e-04, -1.7468244e-04,  7.8215898e-04,
        1.9829706e-03, -1.4885566e-03,  2.4071932e-04, -1.1849286e-03,
       -1.2735527e-03,  1.2053441e-03,  1.3842462e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=250102>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]]],


       [[[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]]],


       [[[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
           0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.]],

        [[-0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0.,  0., -0.]]],


       [[[ 0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0.,  0.,  0.,  0.]]],


       [[[ 0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,
           0.,  0., -0.,  0.]],

        [[ 0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[ 0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
       -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,
        0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
        0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
       -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
       -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0.,
        0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ...,  0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
       -0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
        0.,  0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.7147063e-03, -7.1344746e-04, -8.4157940e-04, -3.4186951e-04,
       -6.4603821e-04, -8.6898590e-04, -2.9516855e-04,  9.7657030e-04,
       -1.9253780e-03,  9.7318448e-04,  9.6420175e-04, -1.3251969e-03,
        1.6553674e-03,  1.8340681e-03, -3.7930187e-04, -3.7164846e-05,
       -1.3671503e-04,  2.1934912e-03, -8.4312115e-04,  2.8084761e-03,
        9.4901409e-04, -1.6356679e-03,  8.7871123e-04, -6.3248695e-04,
       -9.0221711e-06, -3.0651031e-04, -8.0447143e-04, -1.8284787e-04,
        9.1000873e-04, -3.4759790e-04, -1.9395242e-03, -1.4583151e-03,
       -6.7984511e-04, -9.8126067e-04, -1.7468244e-04,  7.8215898e-04,
        1.9829706e-03, -1.4885566e-03,  2.4071932e-04, -1.1849286e-03,
       -1.2735527e-03,  1.2053441e-03,  1.3842462e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=250102>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=250102>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=250102>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
