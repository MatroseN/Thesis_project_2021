,Hyper parameters
0,"batch_size,8"
1,"seed,78673800"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.]]],


       [[[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.]]],


       [[[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0.,  0.,  0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[-0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.]],

        [[-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.]]],


       [[[-0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,
        0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
        0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0.,
        0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
        0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
       -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
       -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
        0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0.,  0.,  0., ..., -0.,  0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
        0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0.,  0.,  0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-1.6272749e-03,  2.3205152e-04,  2.2962585e-03, -6.6344172e-04,
        1.3853119e-03, -9.6933520e-04,  7.5967569e-04, -6.1990559e-04,
        2.5724777e-04, -1.8438241e-03, -3.9298652e-04, -1.4696291e-04,
        1.2831085e-03, -1.0895646e-03,  1.1470084e-03,  5.2360335e-04,
        8.0992999e-05, -1.2535855e-04,  6.3484447e-04,  2.2857543e-04,
        6.2231021e-04,  3.7846412e-04,  2.2347898e-03,  6.9428131e-04,
       -6.5259618e-04, -1.2426776e-03, -9.6984353e-04,  3.1143834e-04,
       -1.6987607e-03, -1.3736215e-03, -9.5330691e-04,  8.6166902e-04,
       -9.1723044e-04,  1.1241438e-03, -2.7747176e-04,  2.1726273e-05,
        1.4185618e-03,  1.2201426e-04,  6.7802198e-04, -5.7803304e-04,
       -1.0331263e-03,  6.1737373e-04, -7.3815376e-04], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=173984>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.]]],


       [[[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.]]],


       [[[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0.,  0.,  0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[-0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.]],

        [[-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.]]],


       [[[-0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,
        0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
        0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0.,
        0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
        0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
       -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
       -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
        0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0.,  0.,  0., ..., -0.,  0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
        0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0.,  0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-1.6272749e-03,  2.3205152e-04,  2.2962585e-03, -6.6344172e-04,
        1.3853119e-03, -9.6933520e-04,  7.5967569e-04, -6.1990559e-04,
        2.5724777e-04, -1.8438241e-03, -3.9298652e-04, -1.4696291e-04,
        1.2831085e-03, -1.0895646e-03,  1.1470084e-03,  5.2360335e-04,
        8.0992999e-05, -1.2535855e-04,  6.3484447e-04,  2.2857543e-04,
        6.2231021e-04,  3.7846412e-04,  2.2347898e-03,  6.9428131e-04,
       -6.5259618e-04, -1.2426776e-03, -9.6984353e-04,  3.1143834e-04,
       -1.6987607e-03, -1.3736215e-03, -9.5330691e-04,  8.6166902e-04,
       -9.1723044e-04,  1.1241438e-03, -2.7747176e-04,  2.1726273e-05,
        1.4185618e-03,  1.2201426e-04,  6.7802198e-04, -5.7803304e-04,
       -1.0331263e-03,  6.1737373e-04, -7.3815376e-04], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=173984>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=173984>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=173984>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
