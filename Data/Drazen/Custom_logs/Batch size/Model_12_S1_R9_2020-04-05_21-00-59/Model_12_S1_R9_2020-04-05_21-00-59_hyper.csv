,Hyper parameters
0,"batch_size,8"
1,"seed,26650804"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0.,  0., -0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0., -0.,  0.,  0.]]],


       [[[ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0.,  0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
           0., -0.,  0.,  0.]]],


       [[[ 0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0.,  0.]],

        [[ 0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,
           0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0.,  0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
        0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0.,  0.,  0., ..., -0.,  0.,  0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
        0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,
       -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,
        0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
        0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
        0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0.,  0.,  0.],
       [-0.,  0.,  0., ...,  0.,  0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0.,  0., ..., -0., -0.,  0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,
        0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
        0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
        0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
        0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0.,  0.,  0.,  0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.9819087e-03,  2.8480208e-03,  9.6214598e-04, -2.0252154e-03,
        5.4407644e-04, -9.6278469e-04, -2.8983789e-04, -6.7334890e-04,
       -3.3188667e-04, -3.1803973e-04,  1.7853129e-03, -1.8721274e-03,
        5.7095528e-04,  9.8140059e-05,  1.8128620e-03, -2.1399036e-03,
       -3.3797220e-05, -4.2113478e-04, -9.3367137e-04, -2.7686189e-04,
       -2.0900317e-03, -1.8646290e-04,  9.8509190e-04,  3.1348018e-04,
        1.3296519e-03,  7.5462175e-04,  5.9397233e-04,  4.8163618e-04,
        2.4256429e-03,  2.8510357e-04, -1.9579385e-03, -9.6501084e-04,
        9.5676543e-05, -3.8626563e-04, -1.2416837e-03, -1.1048932e-03,
       -2.0483884e-03,  1.3556373e-03, -7.7342987e-04, -7.4091731e-05,
       -3.2545635e-04,  1.1941477e-03,  1.0141793e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=195732>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0.,  0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0.,  0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0., -0.,  0.,  0.]]],


       [[[ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0.,  0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
           0., -0.,  0.,  0.]]],


       [[[ 0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0.,  0.]],

        [[ 0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,
           0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0.,  0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
        0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0.,  0.,  0., ..., -0.,  0.,  0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
        0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,
       -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,
        0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
        0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
        0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0.,  0.,  0.],
       [-0.,  0.,  0., ...,  0.,  0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0.,  0., ..., -0., -0.,  0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,
        0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
        0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
        0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
        0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0.,  0.,  0.,  0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.9819087e-03,  2.8480208e-03,  9.6214598e-04, -2.0252154e-03,
        5.4407644e-04, -9.6278469e-04, -2.8983789e-04, -6.7334890e-04,
       -3.3188667e-04, -3.1803973e-04,  1.7853129e-03, -1.8721274e-03,
        5.7095528e-04,  9.8140059e-05,  1.8128620e-03, -2.1399036e-03,
       -3.3797220e-05, -4.2113478e-04, -9.3367137e-04, -2.7686189e-04,
       -2.0900317e-03, -1.8646290e-04,  9.8509190e-04,  3.1348018e-04,
        1.3296519e-03,  7.5462175e-04,  5.9397233e-04,  4.8163618e-04,
        2.4256429e-03,  2.8510357e-04, -1.9579385e-03, -9.6501084e-04,
        9.5676543e-05, -3.8626563e-04, -1.2416837e-03, -1.1048932e-03,
       -2.0483884e-03,  1.3556373e-03, -7.7342987e-04, -7.4091731e-05,
       -3.2545635e-04,  1.1941477e-03,  1.0141793e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=195732>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=195732>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=195732>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
