,Hyper parameters
0,"batch_size,8"
1,"seed,11659282"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[ 0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0., -0.]]],


       [[[ 0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0., -0.,  0.],
       [-0.,  0., -0., ...,  0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
       -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
        0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
       -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
       -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0.,
       -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0., -0.,  0., ...,  0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
       -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,
       -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
        0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
        0.,  0.,  0.,  0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-5.8867229e-04,  1.7400166e-03,  2.4186964e-03, -4.1402259e-04,
       -6.9218990e-04, -6.4469868e-04, -1.8651531e-03, -1.3751193e-03,
        2.4270080e-03, -2.5333356e-04, -1.5546920e-03,  3.3982733e-04,
        1.2544629e-03, -7.5765460e-04, -8.3916151e-04,  4.8030171e-04,
        7.1482459e-04,  1.2522088e-03, -1.4620584e-03, -1.5859345e-03,
        3.9617324e-04, -1.6858947e-03,  1.0603078e-03, -3.2122943e-04,
        9.3559793e-04, -1.2576711e-04,  5.5621547e-04, -9.1725576e-04,
        1.3893298e-04, -1.1176191e-03,  9.4248226e-04,  1.1775171e-03,
       -7.8063697e-04,  4.9113034e-04,  2.1823752e-03,  4.2425536e-04,
       -8.1809075e-04, -1.0049907e-03, -1.7080825e-03,  2.1813044e-04,
       -1.5523972e-03, -8.0556281e-05,  2.9947432e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0., -0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[ 0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0., -0.]]],


       [[[ 0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0.,  0., ...,  0., -0.,  0.],
       [-0.,  0., -0., ...,  0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
       -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
        0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
       -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
       -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0.,
       -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0., -0.,  0., ...,  0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
       -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,
       -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
        0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
        0.,  0.,  0.,  0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-5.8867229e-04,  1.7400166e-03,  2.4186964e-03, -4.1402259e-04,
       -6.9218990e-04, -6.4469868e-04, -1.8651531e-03, -1.3751193e-03,
        2.4270080e-03, -2.5333356e-04, -1.5546920e-03,  3.3982733e-04,
        1.2544629e-03, -7.5765460e-04, -8.3916151e-04,  4.8030171e-04,
        7.1482459e-04,  1.2522088e-03, -1.4620584e-03, -1.5859345e-03,
        3.9617324e-04, -1.6858947e-03,  1.0603078e-03, -3.2122943e-04,
        9.3559793e-04, -1.2576711e-04,  5.5621547e-04, -9.1725576e-04,
        1.3893298e-04, -1.1176191e-03,  9.4248226e-04,  1.1775171e-03,
       -7.8063697e-04,  4.9113034e-04,  2.1823752e-03,  4.2425536e-04,
       -8.1809075e-04, -1.0049907e-03, -1.7080825e-03,  2.1813044e-04,
       -1.5523972e-03, -8.0556281e-05,  2.9947432e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
