,Hyper parameters
0,"batch_size,8"
1,"seed,9659070"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0.,  0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0., -0., -0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.]]],


       [[[-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,
        0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0.,  0., -0.],
       [ 0.,  0.,  0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ...,  0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
        0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,
        0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
       -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0.,
       -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
        0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,
        0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ...,  0.,  0., -0.],
       ...,
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       [-0.,  0.,  0., ...,  0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
        0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00020252,  0.00034996, -0.00091509, -0.0004541 , -0.00166824,
        0.003455  , -0.00099058,  0.00066095, -0.000257  ,  0.00034701,
        0.00181304, -0.00041442, -0.00050719,  0.00113726,  0.00283937,
       -0.00078534, -0.00046062,  0.00128713,  0.00080188, -0.00062902,
       -0.00191012,  0.00134351, -0.00141743, -0.00119192, -0.00209364,
       -0.00073046, -0.00122595, -0.00123717, -0.00040271,  0.00356694,
        0.00205781, -0.00051774, -0.00026928,  0.00014105,  0.00038024,
       -0.00040504, -0.00113098, -0.00032714,  0.00060277, -0.0014309 ,
       -0.00042   ,  0.00058055,  0.00063013], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=184858>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0.,  0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0., -0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.]]],


       [[[-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,
        0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0.,  0., -0.],
       [ 0.,  0.,  0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ...,  0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
        0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,
        0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
       -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0.,
       -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
        0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,
        0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ...,  0.,  0., -0.],
       ...,
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       [-0.,  0.,  0., ...,  0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
        0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00020252,  0.00034996, -0.00091509, -0.0004541 , -0.00166824,
        0.003455  , -0.00099058,  0.00066095, -0.000257  ,  0.00034701,
        0.00181304, -0.00041442, -0.00050719,  0.00113726,  0.00283937,
       -0.00078534, -0.00046062,  0.00128713,  0.00080188, -0.00062902,
       -0.00191012,  0.00134351, -0.00141743, -0.00119192, -0.00209364,
       -0.00073046, -0.00122595, -0.00123717, -0.00040271,  0.00356694,
        0.00205781, -0.00051774, -0.00026928,  0.00014105,  0.00038024,
       -0.00040504, -0.00113098, -0.00032714,  0.00060277, -0.0014309 ,
       -0.00042   ,  0.00058055,  0.00063013], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=184858>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=184858>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=184858>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
