,Hyper parameters
0,"batch_size,32"
1,"seed,11659282"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0.,  0.]]],


       [[[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.]]],


       [[[ 0.,  0., -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0., -0., -0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.]]],


       [[[-0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[ 0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]]],


       [[[ 0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
        0., -0.,  0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [ 0.,  0.,  0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
        0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
        0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
       -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
        0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
        0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.],
       ...,
       [-0., -0.,  0., ...,  0., -0., -0.],
       [ 0., -0.,  0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
        0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
        0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,
        0., -0., -0.,  0.,  0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.],
       ...,
       [ 0., -0.,  0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 3.4493383e-04,  3.1128468e-04,  1.6925929e-03,  7.6167576e-05,
       -1.9138606e-05,  5.8721710e-04,  1.6468909e-03,  7.1752409e-04,
        9.0885448e-04,  1.4245968e-04, -1.3624177e-03,  3.0075185e-04,
       -2.3027766e-04, -1.6005307e-04,  8.7106171e-05, -1.4245957e-03,
       -1.2525917e-03, -9.3297294e-04, -9.0703077e-04,  2.2748557e-03,
       -2.1786115e-04, -1.0953470e-03, -8.1906503e-04,  1.8496093e-03,
       -1.0242537e-03, -2.1434207e-03,  4.9006636e-04,  4.1167525e-05,
        8.4775384e-04,  1.0271679e-03, -7.9704175e-04, -1.3351164e-04,
        1.2302477e-03, -3.9450020e-05,  6.2875863e-04, -4.3918463e-04,
        4.8137116e-04, -2.7532424e-04, -3.9837739e-04, -2.0383706e-04,
        4.8621916e-04, -1.9847723e-03, -3.1246970e-04], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=46223>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0.,  0.]]],


       [[[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.]]],


       [[[ 0.,  0., -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0., -0., -0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.]]],


       [[[-0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[ 0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]]],


       [[[ 0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
        0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [ 0.,  0.,  0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
        0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
        0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
       -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
        0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
        0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.],
       ...,
       [-0., -0.,  0., ...,  0., -0., -0.],
       [ 0., -0.,  0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
        0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
        0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,
        0., -0., -0.,  0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.],
       ...,
       [ 0., -0.,  0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 3.4493383e-04,  3.1128468e-04,  1.6925929e-03,  7.6167576e-05,
       -1.9138606e-05,  5.8721710e-04,  1.6468909e-03,  7.1752409e-04,
        9.0885448e-04,  1.4245968e-04, -1.3624177e-03,  3.0075185e-04,
       -2.3027766e-04, -1.6005307e-04,  8.7106171e-05, -1.4245957e-03,
       -1.2525917e-03, -9.3297294e-04, -9.0703077e-04,  2.2748557e-03,
       -2.1786115e-04, -1.0953470e-03, -8.1906503e-04,  1.8496093e-03,
       -1.0242537e-03, -2.1434207e-03,  4.9006636e-04,  4.1167525e-05,
        8.4775384e-04,  1.0271679e-03, -7.9704175e-04, -1.3351164e-04,
        1.2302477e-03, -3.9450020e-05,  6.2875863e-04, -4.3918463e-04,
        4.8137116e-04, -2.7532424e-04, -3.9837739e-04, -2.0383706e-04,
        4.8621916e-04, -1.9847723e-03, -3.1246970e-04], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=46223>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=46223>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=46223>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
