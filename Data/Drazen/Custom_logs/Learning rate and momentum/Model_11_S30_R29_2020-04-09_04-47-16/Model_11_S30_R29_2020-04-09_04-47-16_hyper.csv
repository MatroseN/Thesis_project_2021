,Hyper parameters
0,"batch_size,32"
1,"seed,14179000"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.]]],


       [[[ 0., -0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0.,  0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [ 0.,  0.,  0., ...,  0.,  0., -0.],
       ...,
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0.,  0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
        0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
        0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
        0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
       -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,
        0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 0.00429135,  0.00020718,  0.00252302, -0.0027783 , -0.00872375,
       -0.00198699, -0.00235808,  0.00243166, -0.00263789,  0.00438376,
       -0.00118925,  0.00287085, -0.00286684,  0.00153049,  0.00032359,
        0.00287654, -0.00750399,  0.00109865, -0.00268925,  0.00512202,
       -0.00408143, -0.00166739,  0.00687278, -0.00093651, -0.00631261,
       -0.00026619, -0.00028155,  0.00086522,  0.0025158 ,  0.00326468,
        0.00253349,  0.00117908,  0.00396472,  0.00260543, -0.00135407,
       -0.00100056,  0.00338986,  0.00129508, -0.00211564,  0.0001992 ,
       -0.00535327, -0.00357674,  0.00333582], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=65256>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.]]],


       [[[ 0., -0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0.,  0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [ 0.,  0.,  0., ...,  0.,  0., -0.],
       ...,
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
        0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
        0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
        0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
       -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,
        0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 0.00429135,  0.00020718,  0.00252302, -0.0027783 , -0.00872375,
       -0.00198699, -0.00235808,  0.00243166, -0.00263789,  0.00438376,
       -0.00118925,  0.00287085, -0.00286684,  0.00153049,  0.00032359,
        0.00287654, -0.00750399,  0.00109865, -0.00268925,  0.00512202,
       -0.00408143, -0.00166739,  0.00687278, -0.00093651, -0.00631261,
       -0.00026619, -0.00028155,  0.00086522,  0.0025158 ,  0.00326468,
        0.00253349,  0.00117908,  0.00396472,  0.00260543, -0.00135407,
       -0.00100056,  0.00338986,  0.00129508, -0.00211564,  0.0001992 ,
       -0.00535327, -0.00357674,  0.00333582], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=65256>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=65256>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=65256>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
