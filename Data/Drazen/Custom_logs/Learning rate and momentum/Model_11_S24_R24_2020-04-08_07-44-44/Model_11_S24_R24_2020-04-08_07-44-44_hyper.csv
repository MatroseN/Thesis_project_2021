,Hyper parameters
0,"batch_size,32"
1,"seed,88189417"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       [-0.,  0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,
        0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
       -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
       -0., -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [ 0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [ 0.,  0.,  0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-2.3861767e-03, -4.1624433e-03,  3.2957240e-03, -5.7705319e-03,
        4.9371036e-05, -1.6693292e-04, -4.0972391e-03,  6.3051149e-04,
        5.3593712e-03,  1.6467695e-03, -2.3627148e-03,  3.6910602e-03,
       -8.5251417e-04,  3.5563102e-03, -3.3235681e-04, -1.0727034e-03,
        5.8523350e-04, -3.1411920e-03,  4.9720588e-03, -1.0542979e-03,
       -7.9147649e-05,  2.5383369e-03, -3.6177975e-03, -2.9189619e-03,
       -2.3843509e-03, -6.1300304e-04, -3.5559309e-03,  1.6523438e-03,
        6.0914936e-03,  6.9746788e-04, -2.0942725e-03, -5.4667261e-03,
       -2.3713140e-04, -1.4383734e-03,  1.7946385e-03, -4.6769488e-03,
        8.5917786e-03,  3.5719036e-03, -1.9301751e-03,  4.6619358e-03,
       -3.1151031e-03, -5.7394709e-04,  4.7146589e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=59818>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       [-0.,  0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,
        0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
       -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
       -0., -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [ 0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [ 0.,  0.,  0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-2.3861767e-03, -4.1624433e-03,  3.2957240e-03, -5.7705319e-03,
        4.9371036e-05, -1.6693292e-04, -4.0972391e-03,  6.3051149e-04,
        5.3593712e-03,  1.6467695e-03, -2.3627148e-03,  3.6910602e-03,
       -8.5251417e-04,  3.5563102e-03, -3.3235681e-04, -1.0727034e-03,
        5.8523350e-04, -3.1411920e-03,  4.9720588e-03, -1.0542979e-03,
       -7.9147649e-05,  2.5383369e-03, -3.6177975e-03, -2.9189619e-03,
       -2.3843509e-03, -6.1300304e-04, -3.5559309e-03,  1.6523438e-03,
        6.0914936e-03,  6.9746788e-04, -2.0942725e-03, -5.4667261e-03,
       -2.3713140e-04, -1.4383734e-03,  1.7946385e-03, -4.6769488e-03,
        8.5917786e-03,  3.5719036e-03, -1.9301751e-03,  4.6619358e-03,
       -3.1151031e-03, -5.7394709e-04,  4.7146589e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=59818>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=59818>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=59818>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
