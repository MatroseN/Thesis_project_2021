,Hyper parameters
0,"batch_size,32"
1,"seed,71924703"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [ 0.,  0.,  0., ...,  0.,  0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
        0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
        0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0., -0.],
       [ 0.,  0., -0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
       -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-8.3826930e-04, -1.4718475e-03,  1.2028801e-03, -3.0484588e-03,
        1.7567029e-03,  4.1024331e-03,  7.7212905e-04,  1.3207768e-03,
       -4.4072236e-04,  1.7895435e-03, -2.0161902e-03,  2.5153714e-03,
        9.3458471e-04,  1.8715868e-03, -4.1052904e-03,  6.4258543e-03,
       -5.7179277e-04, -2.3373384e-03,  4.9245949e-03,  2.0437182e-03,
        1.0406669e-03,  7.7774934e-04, -3.1207113e-03, -3.7020559e-03,
        3.0536714e-03,  4.2625592e-04, -5.9427060e-03, -2.9683651e-03,
        2.5082617e-03,  4.0894044e-03, -5.2369982e-03,  7.3553325e-05,
       -3.2613324e-03, -1.8434802e-03,  3.1882671e-03, -1.5948405e-03,
       -4.4430369e-03, -1.9141340e-03, -8.1539724e-04,  3.3924181e-03,
       -8.6501299e-04,  2.3707927e-03, -4.3241460e-05], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=57099>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [ 0.,  0.,  0., ...,  0.,  0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
        0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
        0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0., -0.],
       [ 0.,  0., -0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
       -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-8.3826930e-04, -1.4718475e-03,  1.2028801e-03, -3.0484588e-03,
        1.7567029e-03,  4.1024331e-03,  7.7212905e-04,  1.3207768e-03,
       -4.4072236e-04,  1.7895435e-03, -2.0161902e-03,  2.5153714e-03,
        9.3458471e-04,  1.8715868e-03, -4.1052904e-03,  6.4258543e-03,
       -5.7179277e-04, -2.3373384e-03,  4.9245949e-03,  2.0437182e-03,
        1.0406669e-03,  7.7774934e-04, -3.1207113e-03, -3.7020559e-03,
        3.0536714e-03,  4.2625592e-04, -5.9427060e-03, -2.9683651e-03,
        2.5082617e-03,  4.0894044e-03, -5.2369982e-03,  7.3553325e-05,
       -3.2613324e-03, -1.8434802e-03,  3.1882671e-03, -1.5948405e-03,
       -4.4430369e-03, -1.9141340e-03, -8.1539724e-04,  3.3924181e-03,
       -8.6501299e-04,  2.3707927e-03, -4.3241460e-05], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=57099>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=57099>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=57099>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
