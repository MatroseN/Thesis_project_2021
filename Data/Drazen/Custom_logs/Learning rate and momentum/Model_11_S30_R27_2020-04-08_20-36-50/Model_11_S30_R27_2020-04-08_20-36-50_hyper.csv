,Hyper parameters
0,"batch_size,32"
1,"seed,13030964"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.]]],


       [[[ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]]],


       [[[-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]]],


       [[[-0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0.,  0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [ 0.,  0., -0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
       -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
       -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,
       -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
        0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
        0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [ 0., -0., -0., ...,  0.,  0., -0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
       -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00524619, -0.00140433,  0.00298119,  0.00518654,  0.00668404,
        0.00130478,  0.00062712,  0.00290886, -0.00103761,  0.00269357,
       -0.00100061, -0.0003823 , -0.00479433, -0.0029219 , -0.00379623,
        0.00115975, -0.00018234,  0.00274327,  0.00567378,  0.00466088,
        0.00041003, -0.00097869,  0.00425543,  0.00039223, -0.00454149,
        0.00913782,  0.00106653,  0.00371134, -0.00621791, -0.00516094,
        0.00220577,  0.00208495,  0.00066094, -0.00253128,  0.00534332,
       -0.00946831,  0.00332321, -0.00565748,  0.00132063, -0.01159242,
        0.00678086, -0.00853151, -0.00187096], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.]]],


       [[[ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]]],


       [[[-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]]],


       [[[-0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0.,  0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [ 0.,  0., -0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
       -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
       -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,
       -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
        0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
        0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [ 0., -0., -0., ...,  0.,  0., -0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
       -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00524619, -0.00140433,  0.00298119,  0.00518654,  0.00668404,
        0.00130478,  0.00062712,  0.00290886, -0.00103761,  0.00269357,
       -0.00100061, -0.0003823 , -0.00479433, -0.0029219 , -0.00379623,
        0.00115975, -0.00018234,  0.00274327,  0.00567378,  0.00466088,
        0.00041003, -0.00097869,  0.00425543,  0.00039223, -0.00454149,
        0.00913782,  0.00106653,  0.00371134, -0.00621791, -0.00516094,
        0.00220577,  0.00208495,  0.00066094, -0.00253128,  0.00534332,
       -0.00946831,  0.00332321, -0.00565748,  0.00132063, -0.01159242,
        0.00678086, -0.00853151, -0.00187096], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
