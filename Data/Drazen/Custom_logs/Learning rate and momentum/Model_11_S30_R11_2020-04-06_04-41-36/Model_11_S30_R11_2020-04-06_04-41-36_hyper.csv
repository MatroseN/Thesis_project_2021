,Hyper parameters
0,"batch_size,32"
1,"seed,48338042"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.]]],


       [[[-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.]]],


       [[[-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0.,  0., -0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ...,  0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
       -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
       -0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-4.9065077e-04, -2.4352991e-03, -4.1699009e-03,  1.1889829e-03,
       -1.4989395e-03, -2.7304071e-03, -1.1047301e-03, -6.5109837e-03,
       -2.5137763e-03,  3.8348935e-03, -4.4969725e-03,  1.3909255e-02,
        7.6934928e-03,  2.6005073e-03,  5.0057154e-03,  2.6212905e-03,
        1.7109563e-03,  3.1433876e-03,  4.2903901e-04, -5.1401057e-03,
        1.1464460e-03,  4.3329867e-03, -9.5788366e-04, -6.0754344e-03,
       -3.0181149e-03,  2.4256625e-03,  9.4343694e-03, -3.3851319e-03,
        3.4588259e-03, -6.1306865e-03, -1.9667263e-03,  1.0656547e-05,
        5.0644958e-03,  1.6016251e-04, -7.2189752e-04, -8.2286575e-04,
       -3.9789649e-03, -8.9432346e-03, -4.4182283e-03, -1.0912109e-03,
        1.4533853e-03,  5.2444842e-03, -2.2668685e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=76132>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.]]],


       [[[-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.]]],


       [[[-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0.,  0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ...,  0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
       -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-4.9065077e-04, -2.4352991e-03, -4.1699009e-03,  1.1889829e-03,
       -1.4989395e-03, -2.7304071e-03, -1.1047301e-03, -6.5109837e-03,
       -2.5137763e-03,  3.8348935e-03, -4.4969725e-03,  1.3909255e-02,
        7.6934928e-03,  2.6005073e-03,  5.0057154e-03,  2.6212905e-03,
        1.7109563e-03,  3.1433876e-03,  4.2903901e-04, -5.1401057e-03,
        1.1464460e-03,  4.3329867e-03, -9.5788366e-04, -6.0754344e-03,
       -3.0181149e-03,  2.4256625e-03,  9.4343694e-03, -3.3851319e-03,
        3.4588259e-03, -6.1306865e-03, -1.9667263e-03,  1.0656547e-05,
        5.0644958e-03,  1.6016251e-04, -7.2189752e-04, -8.2286575e-04,
       -3.9789649e-03, -8.9432346e-03, -4.4182283e-03, -1.0912109e-03,
        1.4533853e-03,  5.2444842e-03, -2.2668685e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=76132>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=76132>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=76132>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
