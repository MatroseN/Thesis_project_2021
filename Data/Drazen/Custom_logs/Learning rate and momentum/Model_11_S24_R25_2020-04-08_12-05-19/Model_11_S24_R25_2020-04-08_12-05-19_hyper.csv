,Hyper parameters
0,"batch_size,32"
1,"seed,95390313"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0.]],

        [[ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[ 0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]]],


       [[[ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
        0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0.,  0., ...,  0.,  0., -0.],
       [ 0., -0.,  0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ...,  0.,  0., -0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,
        0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
       -0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0., -0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.],
       ...,
       [-0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-6.9914525e-03, -3.0977344e-03,  4.9098121e-04,  3.8729818e-03,
       -3.0428320e-03,  9.7333628e-04,  4.2852042e-03,  1.8814654e-03,
       -9.0767961e-04,  2.0126412e-04, -2.9670589e-03, -1.8792676e-03,
        9.0665353e-04,  3.3404457e-03,  3.3552581e-03,  4.8048564e-04,
       -5.4247938e-03,  2.1965050e-03,  3.7735652e-05,  1.8346255e-03,
        7.6851348e-04,  1.2236399e-03,  6.4241323e-03, -1.6856205e-03,
       -2.9869021e-03,  2.6248645e-03, -1.5946244e-03, -1.9764360e-03,
       -7.0867150e-05,  1.0595175e-03, -1.5979046e-03, -1.4774549e-03,
       -1.2621300e-03,  6.3823990e-04,  3.7178167e-03, -3.1628986e-04,
       -4.1675260e-03, -2.1742268e-03, -1.8035277e-03,  3.7949353e-03,
        1.8908533e-04,  7.1283709e-03, -6.0017379e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0.]],

        [[ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[ 0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]]],


       [[[ 0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]]],


       [[[ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
        0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0.,  0., ...,  0.,  0., -0.],
       [ 0., -0.,  0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ...,  0.,  0., -0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,
        0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0., -0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.],
       ...,
       [-0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-6.9914525e-03, -3.0977344e-03,  4.9098121e-04,  3.8729818e-03,
       -3.0428320e-03,  9.7333628e-04,  4.2852042e-03,  1.8814654e-03,
       -9.0767961e-04,  2.0126412e-04, -2.9670589e-03, -1.8792676e-03,
        9.0665353e-04,  3.3404457e-03,  3.3552581e-03,  4.8048564e-04,
       -5.4247938e-03,  2.1965050e-03,  3.7735652e-05,  1.8346255e-03,
        7.6851348e-04,  1.2236399e-03,  6.4241323e-03, -1.6856205e-03,
       -2.9869021e-03,  2.6248645e-03, -1.5946244e-03, -1.9764360e-03,
       -7.0867150e-05,  1.0595175e-03, -1.5979046e-03, -1.4774549e-03,
       -1.2621300e-03,  6.3823990e-04,  3.7178167e-03, -3.1628986e-04,
       -4.1675260e-03, -2.1742268e-03, -1.8035277e-03,  3.7949353e-03,
        1.8908533e-04,  7.1283709e-03, -6.0017379e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
