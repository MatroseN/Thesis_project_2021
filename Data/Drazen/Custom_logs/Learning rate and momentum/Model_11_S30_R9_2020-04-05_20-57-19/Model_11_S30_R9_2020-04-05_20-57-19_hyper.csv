,Hyper parameters
0,"batch_size,32"
1,"seed,26650804"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.]]],


       [[[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.]]],


       [[[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
          -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
       -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00018066, -0.01001713,  0.00174016,  0.00234357, -0.00505219,
        0.00654533,  0.00589139,  0.00409534,  0.00291173,  0.00490313,
       -0.00185786, -0.00287334,  0.00218128,  0.00015382, -0.00116282,
       -0.00029051, -0.00384433,  0.00417834, -0.00109084,  0.0018505 ,
       -0.00382988, -0.00239453,  0.00601569,  0.00259189, -0.00150578,
       -0.00048981,  0.00204746, -0.00787466,  0.00271878, -0.00293716,
       -0.00493537,  0.00119539, -0.00063796,  0.00507794,  0.0029549 ,
        0.00088956, -0.0050693 , -0.00032847, -0.00426755,  0.00162277,
        0.00062091,  0.00297046, -0.00486016], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.]]],


       [[[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.]]],


       [[[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.]],

        [[-0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
          -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
       -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00018066, -0.01001713,  0.00174016,  0.00234357, -0.00505219,
        0.00654533,  0.00589139,  0.00409534,  0.00291173,  0.00490313,
       -0.00185786, -0.00287334,  0.00218128,  0.00015382, -0.00116282,
       -0.00029051, -0.00384433,  0.00417834, -0.00109084,  0.0018505 ,
       -0.00382988, -0.00239453,  0.00601569,  0.00259189, -0.00150578,
       -0.00048981,  0.00204746, -0.00787466,  0.00271878, -0.00293716,
       -0.00493537,  0.00119539, -0.00063796,  0.00507794,  0.0029549 ,
        0.00088956, -0.0050693 , -0.00032847, -0.00426755,  0.00162277,
        0.00062091,  0.00297046, -0.00486016], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
