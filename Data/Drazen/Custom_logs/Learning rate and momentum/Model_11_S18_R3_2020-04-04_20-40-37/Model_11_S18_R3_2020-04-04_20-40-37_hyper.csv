,Hyper parameters
0,"batch_size,32"
1,"seed,11659282"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]]],


       [[[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]]],


       [[[-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0.,  0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.],
       [ 0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -3.786802e-05, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00,  0.000000e+00,
       -0.000000e+00,  0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00,  0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
        0.000000e+00, -0.000000e+00,  0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00,  0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00,  0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
        4.390630e-06, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00,  0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00,  0.000000e+00],
      dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 7.1237073e-04, -2.2250789e-03,  9.2903699e-04,  1.1553626e-04,
       -2.5651525e-03, -1.7955836e-03,  2.3973151e-03,  6.8128295e-04,
        7.1309442e-03,  1.2083170e-03,  2.8364446e-03,  3.2488746e-03,
        5.3979806e-04, -2.9496804e-03,  1.8164497e-03,  1.5738225e-03,
       -2.5811084e-03, -3.3383267e-03,  1.9949956e-03,  4.9727305e-04,
        2.5817300e-03, -2.2800202e-03,  2.4666043e-04, -3.4399580e-03,
       -1.5689852e-03, -3.1276310e-03, -1.6006061e-03, -1.3557724e-03,
       -1.1744197e-03,  1.0555283e-03, -2.7113131e-03, -2.1198110e-03,
        4.0430324e-03,  1.3068648e-03, -2.0911242e-03,  3.8462901e-03,
        4.5796860e-05,  9.6031750e-04, -1.5218149e-05,  6.3064444e-04,
        8.9740264e-04, -2.4138445e-03, -1.9430819e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]]],


       [[[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]]],


       [[[-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0.,  0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.],
       [ 0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -3.786802e-05, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00,  0.000000e+00,
       -0.000000e+00,  0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00,  0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
        0.000000e+00, -0.000000e+00,  0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00,  0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00,  0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
        4.390630e-06, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00,  0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00, -0.000000e+00, -0.000000e+00,
       -0.000000e+00, -0.000000e+00,  0.000000e+00,  0.000000e+00],
      dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 7.1237073e-04, -2.2250789e-03,  9.2903699e-04,  1.1553626e-04,
       -2.5651525e-03, -1.7955836e-03,  2.3973151e-03,  6.8128295e-04,
        7.1309442e-03,  1.2083170e-03,  2.8364446e-03,  3.2488746e-03,
        5.3979806e-04, -2.9496804e-03,  1.8164497e-03,  1.5738225e-03,
       -2.5811084e-03, -3.3383267e-03,  1.9949956e-03,  4.9727305e-04,
        2.5817300e-03, -2.2800202e-03,  2.4666043e-04, -3.4399580e-03,
       -1.5689852e-03, -3.1276310e-03, -1.6006061e-03, -1.3557724e-03,
       -1.1744197e-03,  1.0555283e-03, -2.7113131e-03, -2.1198110e-03,
        4.0430324e-03,  1.3068648e-03, -2.0911242e-03,  3.8462901e-03,
        4.5796860e-05,  9.6031750e-04, -1.5218149e-05,  6.3064444e-04,
        8.9740264e-04, -2.4138445e-03, -1.9430819e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
