,Hyper parameters
0,"batch_size,32"
1,"seed,26650804"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.]]],


       [[[-0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.]],

        [[-0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.]]],


       [[[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0.,  0., -0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.]]],


       [[[-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0.,  0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
        0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0.,  0.,  0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0.,  0.],
       ...,
       [-0.,  0., -0., ...,  0.,  0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0.,  0., ...,  0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
        0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,
        0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
       -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
       -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
        0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,
        0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       ...,
       [ 0., -0.,  0., ..., -0.,  0.,  0.],
       [-0.,  0.,  0., ...,  0., -0.,  0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
        0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
       -0., -0.,  0.,  0.,  0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.1729243e-04,  4.6058628e-04,  1.1024772e-03, -8.4648537e-04,
        1.6591472e-03,  2.4049585e-03,  8.0605311e-04, -1.5690330e-03,
        3.4889247e-04, -3.6746103e-05,  1.2429871e-04,  5.5527379e-04,
       -3.8136798e-03,  2.1471269e-03, -1.3054478e-04,  1.4399602e-04,
       -1.3982359e-03, -4.1282026e-04, -6.1794673e-04, -4.0965435e-05,
       -2.2317695e-03,  1.4653968e-03,  1.5615189e-03,  2.2927001e-03,
        3.1538037e-04, -1.3572071e-03, -8.4134581e-04,  1.3466008e-03,
       -1.1982102e-03, -1.9211652e-03, -7.6787430e-04,  4.2778053e-04,
        7.8565802e-04,  1.6127008e-03,  1.7127468e-03, -7.1967283e-04,
       -1.6046473e-03, -2.7662795e-04, -1.5265362e-04, -2.5455945e-04,
       -1.2917861e-03,  1.5145524e-03, -1.4211659e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.]]],


       [[[-0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0.,  0., -0.],
         [ 0., -0., -0.,  0.,  0., -0.]],

        [[-0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.]]],


       [[[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0.,  0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.]]],


       [[[-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0.,  0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
        0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0.,  0.,  0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0.,  0.],
       ...,
       [-0.,  0., -0., ...,  0.,  0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0.,  0., ...,  0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
        0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,
        0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
       -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
       -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
        0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,
        0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       ...,
       [ 0., -0.,  0., ..., -0.,  0.,  0.],
       [-0.,  0.,  0., ...,  0., -0.,  0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
        0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
       -0., -0.,  0.,  0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.1729243e-04,  4.6058628e-04,  1.1024772e-03, -8.4648537e-04,
        1.6591472e-03,  2.4049585e-03,  8.0605311e-04, -1.5690330e-03,
        3.4889247e-04, -3.6746103e-05,  1.2429871e-04,  5.5527379e-04,
       -3.8136798e-03,  2.1471269e-03, -1.3054478e-04,  1.4399602e-04,
       -1.3982359e-03, -4.1282026e-04, -6.1794673e-04, -4.0965435e-05,
       -2.2317695e-03,  1.4653968e-03,  1.5615189e-03,  2.2927001e-03,
        3.1538037e-04, -1.3572071e-03, -8.4134581e-04,  1.3466008e-03,
       -1.1982102e-03, -1.9211652e-03, -7.6787430e-04,  4.2778053e-04,
        7.8565802e-04,  1.6127008e-03,  1.7127468e-03, -7.1967283e-04,
       -1.6046473e-03, -2.7662795e-04, -1.5265362e-04, -2.5455945e-04,
       -1.2917861e-03,  1.5145524e-03, -1.4211659e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
