,Hyper parameters
0,"batch_size,8"
1,"seed,97982238"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0., -0.,  0.,  0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[-0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0., -0., -0.,  0.]]],


       [[[-0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0.,  0., ...,  0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       ...,
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
        0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
       -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
        0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,
        0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
        0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0.,  0., ...,  0.,  0., -0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
       -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-2.6693052e-04,  1.1938408e-03,  2.2099938e-03, -5.5487629e-04,
        4.4557379e-04, -4.5480326e-04,  2.0722188e-03, -4.4035452e-04,
       -1.6951107e-03,  9.0296572e-04, -9.0244558e-04, -1.4446693e-03,
        1.4718609e-03, -4.2422093e-04, -1.3406511e-03,  1.1535872e-03,
       -1.0551784e-04, -8.2577521e-04, -5.1859935e-04, -1.5844476e-03,
       -5.1264832e-04,  3.9322616e-04, -2.1437968e-03,  1.1934133e-03,
       -2.0868795e-04,  3.2135586e-03, -2.0759844e-03, -8.9045451e-04,
        8.6367574e-05,  2.1828143e-03, -4.1694934e-06,  1.4815456e-04,
       -1.1577888e-03,  2.1535845e-03, -1.2807547e-03, -1.7271382e-03,
       -2.1280962e-04, -9.0114627e-04,  3.8205856e-04,  2.6124299e-03,
       -9.1389613e-04, -3.5470925e-04,  1.1267384e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0., -0.,  0., -0.],
         [ 0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0., -0.,  0.,  0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[-0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
           0., -0., -0.,  0.]]],


       [[[-0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0.,  0., ...,  0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       ...,
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
        0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
       -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
        0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,
        0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
        0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0.,  0., ...,  0.,  0., -0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
       -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-2.6693052e-04,  1.1938408e-03,  2.2099938e-03, -5.5487629e-04,
        4.4557379e-04, -4.5480326e-04,  2.0722188e-03, -4.4035452e-04,
       -1.6951107e-03,  9.0296572e-04, -9.0244558e-04, -1.4446693e-03,
        1.4718609e-03, -4.2422093e-04, -1.3406511e-03,  1.1535872e-03,
       -1.0551784e-04, -8.2577521e-04, -5.1859935e-04, -1.5844476e-03,
       -5.1264832e-04,  3.9322616e-04, -2.1437968e-03,  1.1934133e-03,
       -2.0868795e-04,  3.2135586e-03, -2.0759844e-03, -8.9045451e-04,
        8.6367574e-05,  2.1828143e-03, -4.1694934e-06,  1.4815456e-04,
       -1.1577888e-03,  2.1535845e-03, -1.2807547e-03, -1.7271382e-03,
       -2.1280962e-04, -9.0114627e-04,  3.8205856e-04,  2.6124299e-03,
       -9.1389613e-04, -3.5470925e-04,  1.1267384e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
