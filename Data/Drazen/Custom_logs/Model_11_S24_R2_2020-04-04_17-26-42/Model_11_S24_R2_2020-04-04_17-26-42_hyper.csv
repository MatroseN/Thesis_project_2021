,Hyper parameters
0,"batch_size,32"
1,"seed,36496465"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
           0., -0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0.,  0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
        0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
        0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0.,
        0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0.,  0., ...,  0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ...,  0., -0.,  0.],
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       ...,
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0., -0.,  0., ...,  0.,  0., -0.],
       [ 0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 2.41684611e-03, -2.16207770e-03, -2.21726834e-03, -2.47773394e-04,
        1.30100420e-03,  5.57036983e-05, -3.50321672e-04, -3.05113546e-03,
       -2.49052094e-03,  2.61044316e-03, -1.16369291e-03,  5.55088371e-03,
        6.73861068e-04,  2.02580908e-04, -1.72687473e-03, -2.13859967e-04,
        8.19326262e-04,  4.46791295e-03,  4.12493059e-03, -3.33190849e-03,
        7.43084238e-04, -1.20302445e-06,  3.32106184e-03, -1.11319576e-04,
       -1.51898805e-03, -3.03735794e-03,  3.89709393e-03, -3.53210862e-03,
       -4.05711262e-03,  2.64227390e-03, -4.63868631e-03, -1.52620662e-03,
       -2.01173546e-03, -6.05428533e-04,  2.57551554e-03,  3.61222168e-03,
       -6.67844340e-03,  3.48912406e-04, -2.53914972e-03,  3.71613749e-03,
        2.82495050e-03, -5.03065705e-04,  1.81149377e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=76132>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
           0., -0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0.,  0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
        0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
        0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0.,
        0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0.,  0., ...,  0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ...,  0., -0.,  0.],
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       ...,
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0., -0.,  0., ...,  0.,  0., -0.],
       [ 0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 2.41684611e-03, -2.16207770e-03, -2.21726834e-03, -2.47773394e-04,
        1.30100420e-03,  5.57036983e-05, -3.50321672e-04, -3.05113546e-03,
       -2.49052094e-03,  2.61044316e-03, -1.16369291e-03,  5.55088371e-03,
        6.73861068e-04,  2.02580908e-04, -1.72687473e-03, -2.13859967e-04,
        8.19326262e-04,  4.46791295e-03,  4.12493059e-03, -3.33190849e-03,
        7.43084238e-04, -1.20302445e-06,  3.32106184e-03, -1.11319576e-04,
       -1.51898805e-03, -3.03735794e-03,  3.89709393e-03, -3.53210862e-03,
       -4.05711262e-03,  2.64227390e-03, -4.63868631e-03, -1.52620662e-03,
       -2.01173546e-03, -6.05428533e-04,  2.57551554e-03,  3.61222168e-03,
       -6.67844340e-03,  3.48912406e-04, -2.53914972e-03,  3.71613749e-03,
        2.82495050e-03, -5.03065705e-04,  1.81149377e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=76132>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=76132>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=76132>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
