,Hyper parameters
0,"batch_size,8"
1,"seed,88189417"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.]]],


       [[[ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,
           0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.]]],


       [[[ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,
           0.,  0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
        0.,  0.,  0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       [ 0.,  0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,
        0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,
        0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
        0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
        0.,  0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0.,  0., ...,  0.,  0.,  0.],
       [ 0., -0.,  0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.],
       ...,
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0.,  0.,  0., ...,  0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
        0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
       -0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
        0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,
       -0., -0.,  0.,  0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-1.1382414e-03,  8.8895766e-05, -1.8855943e-03, -1.4748375e-03,
        1.0577346e-03,  2.7908059e-03, -8.7504042e-04, -2.6677837e-04,
        9.3727116e-04, -2.2938954e-04, -9.4249233e-04, -8.7879942e-04,
       -4.3414405e-04, -7.1835017e-04, -9.4980607e-04, -3.5072077e-04,
       -1.9362287e-03,  3.8084891e-04, -1.5276814e-03, -1.5459405e-03,
        1.7094181e-04,  1.8922072e-03,  2.5740832e-03,  1.3942644e-03,
        2.3009330e-04, -1.5903470e-03, -8.7675656e-04,  2.3986548e-03,
        1.8552576e-04,  1.3875752e-03, -2.0559907e-03, -2.7209084e-04,
       -1.5561312e-03, -2.4090268e-04, -2.0490526e-04,  2.2240079e-03,
        2.5710829e-03,  5.3340994e-04, -1.3697506e-03, -1.3404711e-03,
        1.6048343e-03,  6.0611812e-04,  1.6330346e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.]]],


       [[[ 0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,
           0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.]]],


       [[[ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,
           0.,  0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
        0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       [ 0.,  0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0.,  0.,  0., ...,  0.,  0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,
        0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,
        0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
        0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,
        0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0.,  0., ...,  0.,  0.,  0.],
       [ 0., -0.,  0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.],
       ...,
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0.,  0.,  0., ...,  0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
        0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
       -0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
        0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,
       -0., -0.,  0.,  0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-1.1382414e-03,  8.8895766e-05, -1.8855943e-03, -1.4748375e-03,
        1.0577346e-03,  2.7908059e-03, -8.7504042e-04, -2.6677837e-04,
        9.3727116e-04, -2.2938954e-04, -9.4249233e-04, -8.7879942e-04,
       -4.3414405e-04, -7.1835017e-04, -9.4980607e-04, -3.5072077e-04,
       -1.9362287e-03,  3.8084891e-04, -1.5276814e-03, -1.5459405e-03,
        1.7094181e-04,  1.8922072e-03,  2.5740832e-03,  1.3942644e-03,
        2.3009330e-04, -1.5903470e-03, -8.7675656e-04,  2.3986548e-03,
        1.8552576e-04,  1.3875752e-03, -2.0559907e-03, -2.7209084e-04,
       -1.5561312e-03, -2.4090268e-04, -2.0490526e-04,  2.2240079e-03,
        2.5710829e-03,  5.3340994e-04, -1.3697506e-03, -1.3404711e-03,
        1.6048343e-03,  6.0611812e-04,  1.6330346e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=228354>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.9>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
