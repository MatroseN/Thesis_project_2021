,Hyper parameters
0,"batch_size,32"
1,"seed,1754250"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]]],


       [[[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0.,  0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ...,  0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
        0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
        0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ...,  0.,  0.,  0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-6.1242189e-03,  4.8507890e-03, -9.5975256e-06,  5.4969699e-03,
        3.3274100e-03,  3.1170182e-04,  3.5288392e-03,  3.0566498e-03,
        4.9380900e-04,  1.3087130e-03, -1.3043449e-03, -9.7637875e-03,
       -2.2313016e-04,  2.3592908e-03, -4.9570069e-04, -1.0962955e-03,
       -1.5702037e-03,  2.7006245e-03, -4.3611485e-03,  1.4866085e-04,
       -1.8988309e-03, -3.3191883e-03,  2.1686547e-03, -4.1325851e-03,
        1.4028411e-03,  2.8409678e-03,  4.3467325e-04, -9.6789030e-03,
        2.0807793e-03, -4.6165413e-03, -2.0794407e-03,  4.4189217e-03,
        4.3616099e-03,  1.0328591e-02,  3.8025090e-03, -2.7868818e-03,
        4.0794727e-03, -4.4703670e-03, -1.5125923e-03, -2.4389937e-03,
        5.9453695e-04,  3.2011408e-03, -5.4154014e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]]],


       [[[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[ 0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0.,  0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ...,  0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
        0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
        0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ...,  0.,  0.,  0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-6.1242189e-03,  4.8507890e-03, -9.5975256e-06,  5.4969699e-03,
        3.3274100e-03,  3.1170182e-04,  3.5288392e-03,  3.0566498e-03,
        4.9380900e-04,  1.3087130e-03, -1.3043449e-03, -9.7637875e-03,
       -2.2313016e-04,  2.3592908e-03, -4.9570069e-04, -1.0962955e-03,
       -1.5702037e-03,  2.7006245e-03, -4.3611485e-03,  1.4866085e-04,
       -1.8988309e-03, -3.3191883e-03,  2.1686547e-03, -4.1325851e-03,
        1.4028411e-03,  2.8409678e-03,  4.3467325e-04, -9.6789030e-03,
        2.0807793e-03, -4.6165413e-03, -2.0794407e-03,  4.4189217e-03,
        4.3616099e-03,  1.0328591e-02,  3.8025090e-03, -2.7868818e-03,
        4.0794727e-03, -4.4703670e-03, -1.5125923e-03, -2.4389937e-03,
        5.9453695e-04,  3.2011408e-03, -5.4154014e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
