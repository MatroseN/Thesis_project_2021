,Hyper parameters
0,"batch_size,32"
1,"seed,78673800"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.]]],


       [[[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0.,  0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [ 0.,  0.,  0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0.,  0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]]],


       [[[-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ...,  0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,
       -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
       -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00263361,  0.00371121,  0.00344425, -0.0035809 ,  0.0046242 ,
       -0.00454399, -0.00228843,  0.00141317,  0.002213  , -0.00107976,
        0.00473232, -0.00034694, -0.0021808 ,  0.00154546,  0.00123929,
       -0.00010178,  0.00313421,  0.00109591,  0.00086409, -0.00295537,
        0.00199632, -0.00641432, -0.00068584, -0.0019325 ,  0.00163743,
       -0.0013853 ,  0.00073371,  0.00305433,  0.0005993 , -0.00073295,
        0.0020303 , -0.00214236, -0.0067269 , -0.00374202, -0.00325383,
       -0.00385995,  0.00332878, -0.0029572 , -0.00374682,  0.0044176 ,
        0.00391968,  0.0083498 , -0.00079282], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.]]],


       [[[ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0.,  0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[ 0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [ 0.,  0.,  0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0.,  0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]]],


       [[[-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ...,  0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,
       -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
       -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00263361,  0.00371121,  0.00344425, -0.0035809 ,  0.0046242 ,
       -0.00454399, -0.00228843,  0.00141317,  0.002213  , -0.00107976,
        0.00473232, -0.00034694, -0.0021808 ,  0.00154546,  0.00123929,
       -0.00010178,  0.00313421,  0.00109591,  0.00086409, -0.00295537,
        0.00199632, -0.00641432, -0.00068584, -0.0019325 ,  0.00163743,
       -0.0013853 ,  0.00073371,  0.00305433,  0.0005993 , -0.00073295,
        0.0020303 , -0.00214236, -0.0067269 , -0.00374202, -0.00325383,
       -0.00385995,  0.00332878, -0.0029572 , -0.00374682,  0.0044176 ,
        0.00391968,  0.0083498 , -0.00079282], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
