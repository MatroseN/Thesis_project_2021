,Hyper parameters
0,"batch_size,32"
1,"seed,26650804"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.]],

        [[ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.]]],


       [[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.]]],


       [[[ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.]],

        [[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,
           0., -0., -0.,  0.]],

        [[-0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.]]],


       [[[-0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
           0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
        0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0.,  0.],
       [ 0., -0.,  0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [ 0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
       -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
       -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
        0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,
       -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
        0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0., -0.,  0.],
       [ 0., -0., -0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0.,  0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
       -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
       -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
        0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0., -0.,  0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00144035, -0.00296693,  0.00027407,  0.00063396, -0.00384515,
        0.00399133,  0.00086789, -0.00018252, -0.0009705 ,  0.00073113,
       -0.00046725,  0.00020708,  0.00276088, -0.00037692,  0.00221145,
        0.00027801, -0.00185845,  0.0037561 , -0.00017396,  0.00010946,
       -0.00227076, -0.00034279,  0.00420027,  0.00206467, -0.00154416,
       -0.00016197, -0.00020717, -0.00346691,  0.00039896, -0.00120308,
       -0.00173031, -0.00025649, -0.00156071, -0.00018608,  0.00192987,
        0.00215717,  0.00055519, -0.00010235, -0.00052394,  0.00081817,
       -0.00034814,  0.00012829, -0.00188706], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.]],

        [[ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.]]],


       [[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0., -0.]]],


       [[[ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.]],

        [[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,
           0., -0., -0.,  0.]],

        [[-0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.]]],


       [[[-0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
           0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.]],

        [[-0., -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.]],

        [[-0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
           0., -0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
           0.,  0., -0.,  0.]],

        [[-0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
        0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0.,  0.],
       [ 0., -0.,  0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       ...,
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [ 0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,
       -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
       -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
        0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,
       -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
        0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0., -0.,  0.],
       [ 0., -0., -0., ...,  0.,  0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       [ 0.,  0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0.,
       -0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
       -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
        0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00144035, -0.00296693,  0.00027407,  0.00063396, -0.00384515,
        0.00399133,  0.00086789, -0.00018252, -0.0009705 ,  0.00073113,
       -0.00046725,  0.00020708,  0.00276088, -0.00037692,  0.00221145,
        0.00027801, -0.00185845,  0.0037561 , -0.00017396,  0.00010946,
       -0.00227076, -0.00034279,  0.00420027,  0.00206467, -0.00154416,
       -0.00016197, -0.00020717, -0.00346691,  0.00039896, -0.00120308,
       -0.00173031, -0.00025649, -0.00156071, -0.00018608,  0.00192987,
        0.00215717,  0.00055519, -0.00010235, -0.00052394,  0.00081817,
       -0.00034814,  0.00012829, -0.00188706], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
