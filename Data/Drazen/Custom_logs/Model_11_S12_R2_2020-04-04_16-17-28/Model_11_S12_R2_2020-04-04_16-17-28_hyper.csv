,Hyper parameters
0,"batch_size,32"
1,"seed,36496465"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.]]],


       [[[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]],


       [[[ 0., -0.,  0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[ 0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0.,  0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,
           0., -0., -0.,  0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
           0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
           0., -0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,
           0., -0., -0.,  0.]]],


       [[[ 0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,
        0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
        0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
       -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
        0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
        0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
       -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
       -0., -0., -0.,  0.,  0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 2.7319972e-04, -1.6935938e-03, -2.0398648e-04,  1.4697519e-03,
       -2.1987871e-04, -1.4322214e-03, -6.2774477e-04,  7.7942252e-04,
       -9.7266486e-05,  3.8410770e-05,  7.0527091e-04, -3.0393148e-04,
       -5.8137643e-04, -1.2047794e-03, -1.4654710e-04,  9.5598363e-05,
       -4.7932603e-04,  1.5210707e-03,  1.5219877e-04,  8.6987432e-04,
        1.6226487e-04,  1.2963057e-04,  1.9024230e-03,  2.3895019e-04,
        2.7590286e-04, -5.6035677e-04,  1.4322456e-04,  5.0985947e-04,
       -5.5910798e-04, -3.1573343e-04,  3.3366590e-04, -3.3497473e-04,
        8.9463312e-05, -1.4725629e-03,  1.2539376e-03, -1.2541459e-03,
        1.3115542e-03, -7.4976450e-04, -3.8621936e-04, -1.7259457e-03,
        1.5352558e-03, -3.1399194e-04,  8.7251660e-04], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=46223>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.]],

        [[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.]]],


       [[[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]],


       [[[ 0., -0.,  0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[ 0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0.,  0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0.,
           0., -0., -0.,  0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
           0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
           0., -0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,
           0., -0., -0.,  0.]]],


       [[[ 0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0.,  0.,  0., -0., -0.,
           0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
           0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
           0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.]],

        [[ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,
        0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
        0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
       -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
        0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0.,  0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
        0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
       -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
       -0., -0., -0.,  0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 2.7319972e-04, -1.6935938e-03, -2.0398648e-04,  1.4697519e-03,
       -2.1987871e-04, -1.4322214e-03, -6.2774477e-04,  7.7942252e-04,
       -9.7266486e-05,  3.8410770e-05,  7.0527091e-04, -3.0393148e-04,
       -5.8137643e-04, -1.2047794e-03, -1.4654710e-04,  9.5598363e-05,
       -4.7932603e-04,  1.5210707e-03,  1.5219877e-04,  8.6987432e-04,
        1.6226487e-04,  1.2963057e-04,  1.9024230e-03,  2.3895019e-04,
        2.7590286e-04, -5.6035677e-04,  1.4322456e-04,  5.0985947e-04,
       -5.5910798e-04, -3.1573343e-04,  3.3366590e-04, -3.3497473e-04,
        8.9463312e-05, -1.4725629e-03,  1.2539376e-03, -1.2541459e-03,
        1.3115542e-03, -7.4976450e-04, -3.8621936e-04, -1.7259457e-03,
        1.5352558e-03, -3.1399194e-04,  8.7251660e-04], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=46223>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=46223>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=46223>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
