,Hyper parameters
0,"batch_size,32"
1,"seed,36544176"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [ 0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0.,  0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,
       -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
        0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
        0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
        0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-8.4117334e-03, -7.9513073e-04,  6.5647629e-03, -6.9415229e-03,
        1.5704744e-03, -2.7756253e-04, -4.2587980e-03,  4.2070327e-03,
       -5.7142396e-03, -1.0444708e-03, -4.9044169e-03,  4.0142215e-03,
        7.4021658e-03,  4.2884573e-03, -2.3370015e-03,  2.7085831e-03,
        6.7734104e-03, -5.4353953e-04, -9.4822975e-04, -4.2593994e-05,
        1.6271311e-03, -9.9801216e-03, -1.5781583e-03,  5.6373267e-03,
        4.0387441e-03, -2.1161912e-04,  5.0256969e-03,  2.8739925e-03,
        1.4383881e-03, -1.0726758e-02, -7.5060395e-03,  4.9635312e-03,
        3.6629015e-03, -8.4384065e-04,  4.9882513e-03,  5.4723481e-03,
       -3.4289174e-03, -5.4294188e-03, -8.6635596e-04, -1.0065694e-03,
        4.5157061e-03, -3.8775082e-03, -9.8577068e-05], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0.,  0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
           0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [ 0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0.,  0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,
       -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
        0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
        0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
        0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [ 0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-8.4117334e-03, -7.9513073e-04,  6.5647629e-03, -6.9415229e-03,
        1.5704744e-03, -2.7756253e-04, -4.2587980e-03,  4.2070327e-03,
       -5.7142396e-03, -1.0444708e-03, -4.9044169e-03,  4.0142215e-03,
        7.4021658e-03,  4.2884573e-03, -2.3370015e-03,  2.7085831e-03,
        6.7734104e-03, -5.4353953e-04, -9.4822975e-04, -4.2593994e-05,
        1.6271311e-03, -9.9801216e-03, -1.5781583e-03,  5.6373267e-03,
        4.0387441e-03, -2.1161912e-04,  5.0256969e-03,  2.8739925e-03,
        1.4383881e-03, -1.0726758e-02, -7.5060395e-03,  4.9635312e-03,
        3.6629015e-03, -8.4384065e-04,  4.9882513e-03,  5.4723481e-03,
       -3.4289174e-03, -5.4294188e-03, -8.6635596e-04, -1.0065694e-03,
        4.5157061e-03, -3.8775082e-03, -9.8577068e-05], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=54380>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
