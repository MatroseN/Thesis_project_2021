,Hyper parameters
0,"batch_size,32"
1,"seed,78673800"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0.,  0.,  0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]],


       [[[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[-0.,  0.,  0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]],


       [[[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0.,  0.,  0.,  0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.]],

        [[ 0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,
           0.,  0., -0., -0.]],

        [[ 0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0.,  0.,  0., -0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
           0.,  0.,  0., -0.]]],


       [[[ 0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
           0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
           0.,  0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
        0., -0.,  0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       ...,
       [-0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0.,
       -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,
        0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
       -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,
        0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
        0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
        0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 9.0700586e-04, -1.2008119e-03, -8.2027854e-04, -2.1590675e-04,
       -3.9305506e-04, -5.4698030e-04,  1.1429201e-03,  4.1832298e-04,
        1.1853308e-03,  2.7669393e-04,  7.5269246e-04, -1.9517064e-03,
        1.8422178e-04, -2.6161069e-04, -8.1994964e-05,  9.3799783e-04,
        1.1203284e-03, -5.6290836e-04,  1.2782345e-03,  1.9356259e-03,
       -4.0443716e-04, -1.3884917e-03, -2.5336698e-04, -2.6311618e-04,
        2.4398442e-04, -4.6493224e-04,  2.7636150e-04, -5.8448111e-04,
       -1.8777312e-03,  1.0274482e-03, -5.9660181e-04,  2.9365937e-04,
       -1.0971156e-03,  1.0828921e-03, -3.1725576e-04,  3.4687095e-05,
       -3.4569917e-04, -6.2382629e-04,  1.3592190e-04, -2.7182256e-04,
       -2.4558004e-04,  1.3972371e-03,  1.3814332e-04], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0.,  0.,  0.,  0.,  0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]],


       [[[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[-0.,  0.,  0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]],


       [[[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0.,  0.,  0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[ 0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.]],

        [[ 0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,
           0.,  0., -0., -0.]],

        [[ 0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,
           0.,  0.,  0., -0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,
           0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
           0.,  0.,  0., -0.]]],


       [[[ 0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
           0.,  0., -0., -0.]],

        [[ 0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [ 0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,
           0.,  0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([ 0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,
        0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       ...,
       [-0.,  0., -0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0.,
       -0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,
        0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
       -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0.,  0.,
        0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
        0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,
        0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 9.0700586e-04, -1.2008119e-03, -8.2027854e-04, -2.1590675e-04,
       -3.9305506e-04, -5.4698030e-04,  1.1429201e-03,  4.1832298e-04,
        1.1853308e-03,  2.7669393e-04,  7.5269246e-04, -1.9517064e-03,
        1.8422178e-04, -2.6161069e-04, -8.1994964e-05,  9.3799783e-04,
        1.1203284e-03, -5.6290836e-04,  1.2782345e-03,  1.9356259e-03,
       -4.0443716e-04, -1.3884917e-03, -2.5336698e-04, -2.6311618e-04,
        2.4398442e-04, -4.6493224e-04,  2.7636150e-04, -5.8448111e-04,
       -1.8777312e-03,  1.0274482e-03, -5.9660181e-04,  2.9365937e-04,
       -1.0971156e-03,  1.0828921e-03, -3.1725576e-04,  3.4687095e-05,
       -3.4569917e-04, -6.2382629e-04,  1.3592190e-04, -2.7182256e-04,
       -2.4558004e-04,  1.3972371e-03,  1.3814332e-04], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.005>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
