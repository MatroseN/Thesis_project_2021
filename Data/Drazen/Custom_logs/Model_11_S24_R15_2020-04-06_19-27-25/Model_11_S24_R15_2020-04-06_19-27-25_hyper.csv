,Hyper parameters
0,"batch_size,32"
1,"seed,38938858"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]]],


       [[[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0.,  0., ...,  0.,  0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
       -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,
       -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
        0.,  0.,  0., -0., -0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00339695, -0.00126681, -0.001526  , -0.00154837,  0.00145669,
       -0.00039048, -0.00191392, -0.00119736, -0.003531  , -0.00010692,
        0.00162281, -0.00201095,  0.00207456,  0.00035136,  0.00113322,
       -0.00234751,  0.00072179,  0.0001412 ,  0.00624075, -0.00033121,
        0.0003863 , -0.00406149,  0.0056963 ,  0.00850827, -0.00267321,
        0.00336229,  0.00166104,  0.00280761,  0.00249237, -0.00078363,
       -0.00211466,  0.00094408, -0.00323318, -0.00547098, -0.00417047,
        0.00085371, -0.00072907, -0.00074906, -0.00308276, -0.00306192,
        0.00356915,  0.00395716,  0.00171722], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.]]],


       [[[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.]]],


       [[[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0.,  0., ...,  0.,  0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
       -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0.,  0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0.,  0.,
       -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,
        0.,  0.,  0., -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00339695, -0.00126681, -0.001526  , -0.00154837,  0.00145669,
       -0.00039048, -0.00191392, -0.00119736, -0.003531  , -0.00010692,
        0.00162281, -0.00201095,  0.00207456,  0.00035136,  0.00113322,
       -0.00234751,  0.00072179,  0.0001412 ,  0.00624075, -0.00033121,
        0.0003863 , -0.00406149,  0.0056963 ,  0.00850827, -0.00267321,
        0.00336229,  0.00166104,  0.00280761,  0.00249237, -0.00078363,
       -0.00211466,  0.00094408, -0.00323318, -0.00547098, -0.00417047,
        0.00085371, -0.00072907, -0.00074906, -0.00308276, -0.00306192,
        0.00356915,  0.00395716,  0.00171722], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
