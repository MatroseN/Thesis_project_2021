,Hyper parameters
0,"batch_size,32"
1,"seed,10327887"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0.,  0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.]],

        [[-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
       -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
        0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [ 0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
        0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.],
       ...,
       [ 0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 2.9427905e-04,  5.2396138e-03,  3.4126683e-04,  2.2570633e-03,
       -9.3778886e-04,  4.0003802e-03,  1.5426993e-03,  5.7905675e-03,
       -1.5627097e-03,  1.9102717e-03, -2.4300651e-03,  3.8272075e-03,
       -5.7804077e-03, -3.5766696e-03,  6.6375599e-04, -7.2500861e-04,
        7.2168675e-04, -1.4103368e-03, -4.5724721e-03,  2.3999251e-03,
        1.7581193e-03,  6.5143897e-05,  2.8514445e-03, -4.2128628e-03,
       -4.7942284e-03,  1.4105944e-03, -1.1908705e-03,  6.6474965e-03,
       -3.1351368e-03,  4.0575112e-03,  2.0255579e-03, -6.4744359e-05,
        2.5131818e-04,  2.3962660e-03, -3.7603602e-03, -4.2762468e-03,
       -1.2511174e-03, -2.9199044e-03,  1.9116596e-04, -8.0122595e-04,
       -6.3275569e-03,  3.8127934e-03, -7.2640995e-04], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0.,  0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.]],

        [[-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0.,  0.,  0.,  0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
       -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0.,
        0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [ 0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
        0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.],
       ...,
       [ 0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 2.9427905e-04,  5.2396138e-03,  3.4126683e-04,  2.2570633e-03,
       -9.3778886e-04,  4.0003802e-03,  1.5426993e-03,  5.7905675e-03,
       -1.5627097e-03,  1.9102717e-03, -2.4300651e-03,  3.8272075e-03,
       -5.7804077e-03, -3.5766696e-03,  6.6375599e-04, -7.2500861e-04,
        7.2168675e-04, -1.4103368e-03, -4.5724721e-03,  2.3999251e-03,
        1.7581193e-03,  6.5143897e-05,  2.8514445e-03, -4.2128628e-03,
       -4.7942284e-03,  1.4105944e-03, -1.1908705e-03,  6.6474965e-03,
       -3.1351368e-03,  4.0575112e-03,  2.0255579e-03, -6.4744359e-05,
        2.5131818e-04,  2.3962660e-03, -3.7603602e-03, -4.2762468e-03,
       -1.2511174e-03, -2.9199044e-03,  1.9116596e-04, -8.0122595e-04,
       -6.3275569e-03,  3.8127934e-03, -7.2640995e-04], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
