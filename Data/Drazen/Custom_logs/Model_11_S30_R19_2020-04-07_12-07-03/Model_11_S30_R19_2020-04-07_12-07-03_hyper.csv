,Hyper parameters
0,"batch_size,32"
1,"seed,43073757"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]]],


       [[[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]]],


       [[[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0.,  0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0.,  0.,  0.],
       [ 0., -0., -0., ...,  0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0.,  0.,  0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0., -0.,  0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0.,  0., ...,  0.,  0., -0.],
       [ 0., -0., -0., ...,  0.,  0., -0.],
       [-0., -0.,  0., ...,  0., -0.,  0.],
       ...,
       [ 0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0.,  0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00607774, -0.00077267,  0.00620672,  0.00017137,  0.00501255,
        0.00098002,  0.01098253, -0.00229165,  0.00720368,  0.00374059,
       -0.00305205, -0.00998227, -0.0025496 , -0.00455169,  0.00322855,
        0.00154831, -0.00820685, -0.0095716 ,  0.00357314,  0.00615435,
        0.00126096, -0.00015191,  0.00839772,  0.00336564, -0.00818477,
        0.00310238,  0.00149519, -0.00544567,  0.00019013, -0.00053655,
       -0.00791128,  0.00090085, -0.00610089,  0.00194756, -0.0034551 ,
        0.00260995,  0.00498944, -0.00106122,  0.00317703,  0.00450778,
       -0.00207297, -0.00310158,  0.0003316 ], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]]],


       [[[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0.]]],


       [[[-0., -0., -0.,  0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]],

        [[-0., -0., -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0.,  0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0.,  0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0.,  0., ..., -0.,  0.,  0.],
       [ 0., -0., -0., ...,  0., -0.,  0.],
       [ 0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0.,  0.,  0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0.,  0.,  0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
       -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0., -0.,  0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0.,  0., ...,  0.,  0., -0.],
       [ 0., -0., -0., ...,  0.,  0., -0.],
       [-0., -0.,  0., ...,  0., -0.,  0.],
       ...,
       [ 0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0.,  0.,  0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00607774, -0.00077267,  0.00620672,  0.00017137,  0.00501255,
        0.00098002,  0.01098253, -0.00229165,  0.00720368,  0.00374059,
       -0.00305205, -0.00998227, -0.0025496 , -0.00455169,  0.00322855,
        0.00154831, -0.00820685, -0.0095716 ,  0.00357314,  0.00615435,
        0.00126096, -0.00015191,  0.00839772,  0.00336564, -0.00818477,
        0.00310238,  0.00149519, -0.00544567,  0.00019013, -0.00053655,
       -0.00791128,  0.00090085, -0.00610089,  0.00194756, -0.0034551 ,
        0.00260995,  0.00498944, -0.00106122,  0.00317703,  0.00450778,
       -0.00207297, -0.00310158,  0.0003316 ], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=51661>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
