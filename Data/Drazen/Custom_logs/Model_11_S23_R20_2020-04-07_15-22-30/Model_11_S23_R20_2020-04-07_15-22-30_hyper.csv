,Hyper parameters
0,"batch_size,32"
1,"seed,69428798"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0.,  0.,  0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.]],

        [[-0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.]],

        [[-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0., -0., -0.]]],


       [[[-0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
           0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[-0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[-0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0.,  0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,
        0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0.,  0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       ...,
       [-0.,  0., -0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,
       -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
        0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
        0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
        0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
        0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,
       -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,
       -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,
        0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,
       -0.,  0., -0.,  0., -0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 7.9708807e-05,  1.5250344e-03, -1.7572725e-03,  8.4529085e-05,
        8.4151665e-04,  8.1959134e-04, -2.6335057e-03,  1.2045302e-03,
       -9.3166268e-04, -7.0783091e-05,  7.3411537e-04, -9.7307184e-04,
        5.1054783e-04, -1.0261844e-03,  5.9402164e-04, -7.5813872e-04,
       -1.6260081e-03,  8.7071108e-05,  1.5420336e-03,  2.5974496e-03,
       -8.1929227e-04, -1.3203715e-03,  1.2537295e-03,  3.2949803e-04,
        1.5123619e-03,  5.3075142e-04, -3.8896452e-04, -3.9578142e-04,
       -5.6906999e-04, -2.0212571e-03,  1.6198422e-04, -9.8020548e-04,
       -3.3241033e-04,  1.3197399e-03, -1.7565408e-03,  1.7661405e-03,
       -1.9225197e-05,  9.8440447e-04, -9.4094081e-04,  7.0382946e-04,
        2.0858552e-03, -1.0504564e-03, -8.9729542e-04], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=67975>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0.,  0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[-0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0.,  0.,  0.,  0.,  0.],
         [ 0.,  0.,  0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0., -0.,  0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0.,  0.,  0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0.,  0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [ 0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0., -0., -0.,  0.]],

        [[-0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.]],

        [[-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0.,  0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,
           0.,  0.,  0., -0.],
         [-0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0., -0., -0.]]],


       [[[-0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
           0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[-0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0.,  0.]],

        [[-0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
           0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
          -0., -0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0.,  0., -0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,
           0.,  0., -0., -0.]],

        [[-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,
           0.,  0.,  0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,
           0., -0., -0.,  0.],
         [-0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
           0., -0.,  0.,  0.],
         [-0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,
           0.,  0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0.,  0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0.,
        0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0.,  0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       ...,
       [-0.,  0., -0., ...,  0., -0., -0.],
       [ 0.,  0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
        0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,
       -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,
        0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,  0., -0.,
        0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0.,  0.,  0.,
        0.,  0., -0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,
        0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,
       -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],
       [ 0.,  0.,  0., ..., -0.,  0., -0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.],
       ...,
       [ 0., -0., -0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ..., -0.,  0.,  0.],
       [ 0.,  0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([ 0.,  0., -0.,  0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,
       -0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0.,
        0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
        0., -0., -0.,  0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -0.,
       -0.,  0., -0.,  0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 7.9708807e-05,  1.5250344e-03, -1.7572725e-03,  8.4529085e-05,
        8.4151665e-04,  8.1959134e-04, -2.6335057e-03,  1.2045302e-03,
       -9.3166268e-04, -7.0783091e-05,  7.3411537e-04, -9.7307184e-04,
        5.1054783e-04, -1.0261844e-03,  5.9402164e-04, -7.5813872e-04,
       -1.6260081e-03,  8.7071108e-05,  1.5420336e-03,  2.5974496e-03,
       -8.1929227e-04, -1.3203715e-03,  1.2537295e-03,  3.2949803e-04,
        1.5123619e-03,  5.3075142e-04, -3.8896452e-04, -3.9578142e-04,
       -5.6906999e-04, -2.0212571e-03,  1.6198422e-04, -9.8020548e-04,
       -3.3241033e-04,  1.3197399e-03, -1.7565408e-03,  1.7661405e-03,
       -1.9225197e-05,  9.8440447e-04, -9.4094081e-04,  7.0382946e-04,
        2.0858552e-03, -1.0504564e-03, -8.9729542e-04], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=67975>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=67975>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=67975>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.015>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.95>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
