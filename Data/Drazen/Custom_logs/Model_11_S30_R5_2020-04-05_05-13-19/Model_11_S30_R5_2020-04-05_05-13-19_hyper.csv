,Hyper parameters
0,"batch_size,32"
1,"seed,2839179"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]],


       [[[-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]]],


       [[[-0., -0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0.,  0., -0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0.,  0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0.,  0., -0., ...,  0.,  0., -0.],
       [ 0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
        0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
       -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
        0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
       -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
        0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
       -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
        0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0.,  0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-5.1875878e-03, -4.2926972e-03,  4.0703067e-03, -5.0622638e-04,
       -4.3131523e-03, -7.2640311e-03, -3.8327780e-03,  4.0648235e-03,
       -3.6952924e-03, -9.1660791e-04, -6.7852030e-04, -7.7689730e-04,
        6.1837578e-04,  3.4866226e-03,  3.9403895e-03, -2.2842735e-03,
        6.9880546e-03,  5.5048512e-03,  9.7868475e-04,  3.2444913e-03,
        1.5582151e-03,  3.6289368e-03,  3.9068316e-03, -4.1444781e-03,
       -1.3719584e-03, -2.6816168e-04,  4.3232371e-03, -3.9916029e-03,
       -6.3507585e-03,  4.1712570e-05,  6.9067901e-04,  1.3655357e-03,
        1.7083768e-03,  1.5363612e-03, -4.1283118e-03,  1.5329882e-03,
        2.3186116e-03, -4.6821148e-03,  5.5913618e-03, -9.7189547e-04,
        3.7533366e-03, -4.1824346e-03, -1.0129993e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0., -0.],
         [-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]],


       [[[-0., -0., -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]]],


       [[[-0., -0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0.,  0., -0.,  0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
           0., -0., -0.,  0.],
         [-0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0.,  0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ...,  0.,  0.,  0.],
       ...,
       [ 0.,  0., -0., ...,  0.,  0., -0.],
       [ 0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0.,
        0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
       -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0.,
        0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
       -0.,  0., -0.,  0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,
       -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0.,  0.,
        0.,  0., -0.,  0., -0.,  0., -0.,  0.,  0.,  0.,  0.,  0.,  0.,
       -0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0.,  0., -0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,
        0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-5.1875878e-03, -4.2926972e-03,  4.0703067e-03, -5.0622638e-04,
       -4.3131523e-03, -7.2640311e-03, -3.8327780e-03,  4.0648235e-03,
       -3.6952924e-03, -9.1660791e-04, -6.7852030e-04, -7.7689730e-04,
        6.1837578e-04,  3.4866226e-03,  3.9403895e-03, -2.2842735e-03,
        6.9880546e-03,  5.5048512e-03,  9.7868475e-04,  3.2444913e-03,
        1.5582151e-03,  3.6289368e-03,  3.9068316e-03, -4.1444781e-03,
       -1.3719584e-03, -2.6816168e-04,  4.3232371e-03, -3.9916029e-03,
       -6.3507585e-03,  4.1712570e-05,  6.9067901e-04,  1.3655357e-03,
        1.7083768e-03,  1.5363612e-03, -4.1283118e-03,  1.5329882e-03,
        2.3186116e-03, -4.6821148e-03,  5.5913618e-03, -9.7189547e-04,
        3.7533366e-03, -4.1824346e-03, -1.0129993e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=62537>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
