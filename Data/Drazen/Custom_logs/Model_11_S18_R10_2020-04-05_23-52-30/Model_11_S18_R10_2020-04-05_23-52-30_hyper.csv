,Hyper parameters
0,"batch_size,32"
1,"seed,46120159"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[ 0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[ 0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]]],


       [[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.]],

        [[ 0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.]]],


       [[[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0.,  0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.]]],


       [[[ 0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0.,  0.],
       [ 0., -0.,  0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0.,  0., -0.],
       ...,
       [ 0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ...,  0.,  0.,  0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
       -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
        0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       ...,
       [ 0., -0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0.,  0.,  0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00142767,  0.00363018,  0.00161385, -0.00024161,  0.00017299,
       -0.00124352, -0.00029228,  0.00119575,  0.0037264 , -0.00096314,
       -0.00121744, -0.00245576,  0.00169143,  0.00241461,  0.00133303,
       -0.00064309, -0.00103496, -0.00059278, -0.00202667,  0.00049714,
       -0.00063988, -0.00204979,  0.00234788, -0.00108191, -0.00308377,
       -0.00074082, -0.00365034, -0.00091849, -0.00193893,  0.00252363,
        0.00116511,  0.00131452, -0.00285159,  0.00084533,  0.00068589,
       -0.00019017,  0.00113975, -0.00061369, -0.00224683,  0.0009478 ,
        0.00090934,  0.00052358,  0.0034669 ], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[ 0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[ 0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]]],


       [[[-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.]],

        [[ 0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.]]],


       [[[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0., -0.,  0.,  0.,  0.],
         [-0., -0., -0., -0.,  0.,  0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]],

        [[-0., -0.,  0.,  0., -0.,  0.],
         [-0., -0.,  0.,  0.,  0.,  0.],
         [-0., -0., -0., -0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
           0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.]]],


       [[[ 0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0.,  0.,  0., -0.,  0.,  0.,  0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0.,  0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.]]],


       [[[ 0.,  0., -0.,  0., -0., -0.,  0., -0.,  0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[ 0.,  0.,  0., -0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
           0., -0.,  0., -0.],
         [-0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0.,  0., -0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0.,  0.,  0.,  0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0.,  0.,  0.],
       [ 0., -0.,  0., ..., -0., -0.,  0.],
       [-0.,  0., -0., ..., -0.,  0., -0.],
       ...,
       [ 0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0.,  0., ...,  0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0.,  0.,  0.,  0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,
       -0.,  0., -0., -0.,  0., -0.,  0.,  0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0.,  0.,
       -0., -0., -0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,  0.,  0., -0.,
        0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       ...,
       [ 0., -0.,  0., ..., -0.,  0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0., -0.,  0.,  0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-0.00142767,  0.00363018,  0.00161385, -0.00024161,  0.00017299,
       -0.00124352, -0.00029228,  0.00119575,  0.0037264 , -0.00096314,
       -0.00121744, -0.00245576,  0.00169143,  0.00241461,  0.00133303,
       -0.00064309, -0.00103496, -0.00059278, -0.00202667,  0.00049714,
       -0.00063988, -0.00204979,  0.00234788, -0.00108191, -0.00308377,
       -0.00074082, -0.00365034, -0.00091849, -0.00193893,  0.00252363,
        0.00116511,  0.00131452, -0.00285159,  0.00084533,  0.00068589,
       -0.00019017,  0.00113975, -0.00061369, -0.00224683,  0.0009478 ,
        0.00090934,  0.00052358,  0.0034669 ], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=43504>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.01>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
