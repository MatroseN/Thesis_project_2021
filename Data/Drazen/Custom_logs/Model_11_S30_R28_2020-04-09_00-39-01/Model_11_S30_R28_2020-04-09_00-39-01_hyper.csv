,Hyper parameters
0,"batch_size,32"
1,"seed,9659070"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.]]],


       [[[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]]],


       [[[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0.,  0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ...,  0.,  0., -0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,
       -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
       -0., -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,
        0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [ 0.,  0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.4514395e-03, -2.7071186e-03, -1.7721845e-03, -2.0737434e-03,
       -1.4017322e-03,  4.3989136e-03, -2.5999201e-03, -5.6328013e-04,
       -2.1130980e-03, -1.2952524e-03,  9.7700511e-04, -2.3746325e-03,
        2.8148602e-04, -4.8560026e-04,  2.8442291e-03,  7.6232408e-03,
       -6.2698894e-03,  1.4771533e-03, -2.4918157e-03,  6.9248094e-03,
       -6.3404660e-03, -5.9937998e-03, -3.5184678e-03, -4.6191170e-04,
        7.5577823e-03,  5.8786236e-03, -4.1340445e-03,  7.0517312e-04,
       -4.1335277e-04,  4.0536397e-03, -6.3324254e-04,  9.6832227e-04,
        3.4710146e-03,  2.5359499e-03,  1.5100100e-03,  1.5234282e-03,
       -2.6584791e-03, -7.6903947e-05, -2.8905843e-03,  3.3370689e-03,
       -2.4100917e-04, -1.8173027e-04, -3.8270343e-03], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=48942>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.],
         [-0.,  0., -0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]],

        [[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.]]],


       [[[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0., -0., -0., -0.,  0.]]],


       [[[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.],
         [ 0.,  0., -0.,  0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0.,  0.,  0.,  0.,  0., -0., -0., -0., -0.,  0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0.,  0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
           0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]]],


       [[[-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
           0.,  0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0.,  0.,  0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0.,  0., -0.,  0.],
         [ 0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0.,  0., -0., ...,  0.,  0., -0.],
       [ 0., -0.,  0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0.,  0., -0.],
       ...,
       [-0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0.,  0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0.,
       -0.,  0., -0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0.,  0., -0.,
       -0., -0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0.,  0., -0.,
       -0., -0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0.,
       -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0.,
       -0., -0.,  0.,  0.,  0.,  0.,  0., -0.,  0.,  0., -0., -0., -0.,
        0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [ 0.,  0., -0., ..., -0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0., -0., ...,  0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.4514395e-03, -2.7071186e-03, -1.7721845e-03, -2.0737434e-03,
       -1.4017322e-03,  4.3989136e-03, -2.5999201e-03, -5.6328013e-04,
       -2.1130980e-03, -1.2952524e-03,  9.7700511e-04, -2.3746325e-03,
        2.8148602e-04, -4.8560026e-04,  2.8442291e-03,  7.6232408e-03,
       -6.2698894e-03,  1.4771533e-03, -2.4918157e-03,  6.9248094e-03,
       -6.3404660e-03, -5.9937998e-03, -3.5184678e-03, -4.6191170e-04,
        7.5577823e-03,  5.8786236e-03, -4.1340445e-03,  7.0517312e-04,
       -4.1335277e-04,  4.0536397e-03, -6.3324254e-04,  9.6832227e-04,
        3.4710146e-03,  2.5359499e-03,  1.5100100e-03,  1.5234282e-03,
       -2.6584791e-03, -7.6903947e-05, -2.8905843e-03,  3.3370689e-03,
       -2.4100917e-04, -1.8173027e-04, -3.8270343e-03], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=48942>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=48942>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=48942>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
